h1 タスク一覧
button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal_rails" タスク作成
button type="button" class="btn btn-danger" onclick='resetTask()' ゲストタスク リセット

= form_with model: Task.new, local: false do |f|
  div class="modal fade" id="exampleModal_rails" tabindex="-1" aria-labelledby="exampleModalLabel_rails" aria-hidden="true"
    div class="modal-dialog"
      div class="modal-content"
        div class="modal-header"
          h5 class="modal-title" id="exampleModalLabel_rails" Modal title
          button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
        div class="modal-body"
          = f.text_field :title, placeholder: 'タスク名'
        div class="modal-footer"
          button type="button" class="btn btn-secondary" data-bs-dismiss="modal" 閉じる
          = f.submit 'タスク作成', class: 'btn btn-primary'

.mb-3
table.table.table-hover#targetTable
  thead.thead-default 
    tr 
      th タスク
  tbody
    - @tasks.each do |task|
      tr 
        td= task.title

button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" タスク作成

div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true"
  div class="modal-dialog"
    div class="modal-content"
      div class="modal-header"
        h5 class="modal-title" id="exampleModalLabel" Modal title
        button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
      div class="modal-body"
        input type="text" id="task-title" name="task-title"
      div class="modal-footer"
        button type="button" class="btn btn-secondary" data-bs-dismiss="modal" 閉じる
        button type="button" class="btn btn-primary" data-bs-dismiss="modal" id="task-create" onclick="insertTask()" 作成

javascript:
  function insertTask() {
    task = document.getElementById('task-title').value
    let table = document.getElementById('targetTable');
    let newRow = table.insertRow();

    let newCell = newRow.insertCell();
    let newText = document.createTextNode(task);
    newCell.appendChild(newText);

    tasks = localStorage.getItem('tasks').split(',')
    tasks.push(task)
    localStorage.setItem('tasks', tasks)
    
  }

  function formatDate(dt) {
    var y = dt.getFullYear();
    var m = ('00' + (dt.getMonth()+1)).slice(-2);
    var d = ('00' + dt.getDate()).slice(-2);
    return (y + '-' + m + '-' + d);
  }

  function reload(){
    tasks = localStorage.getItem('tasks').split(',')
    
    for (let i = 0; i < tasks.length; i++) {
      let table = document.getElementById('targetTable');
      let newRow = table.insertRow();

      let newCell = newRow.insertCell();
      let newText = document.createTextNode(tasks[i]);
      newCell.appendChild(newText);
    }
  }
  function initTask(){
    let tasks = ['sample1', 'sample2']
    let time = formatDate(new Date());
    localStorage.setItem('tasks', tasks)
    localStorage.setItem('time', time)

    tasks = localStorage.getItem('tasks').split(',')
    time_index = localStorage.getItem('time')
    
    for (let i = 0; i < tasks.length; i++) {
      let table = document.getElementById('targetTable');
      let newRow = table.insertRow();

      let newCell = newRow.insertCell();
      let newText = document.createTextNode(tasks[i]);
      newCell.appendChild(newText);
    }
  }

  function resetTask(){
    localStorage.setItem('tasks', '')
    location.href = '/'
  }

  now = formatDate(new Date());
  time = localStorage.getItem('time');
  if (now === localStorage.getItem('time')){
    reload()
  }else {
    initTask()
  }